//построение области
int m = 10;
border g1(t=0,1) {x=t; y=0; label=2;};
border g2(t=0,1) {x=t+1; y=0; label=2;};
border g3(t=0,1) {x=2; y=t; label=1;};
border g4(t=0,1) {x=t+1; y=1; label=3;};
border g5(t=0,1) {x=t; y=1; label=2;};
border g6(t=0,1) {x=0; y=t; label=1;};
plot(g1(m)+g2(m)+g3(m)+g4(-m)+g5(-m)+g6(-m), wait=1);
mesh Th = buildmesh(g1(m)+g2(m)+g3(m)+g4(-m)+g5(-m)+g6(-m));
plot(Th, wait=1);
//cout << "Th = " << Th.nt << endl;
//for (int i = 0; i <= Th.nt; ++i) {
//	cout << i << endl; 
//	for (int j = 0; j < 3; ++j) {
//		cout << j << " " << Th[i][j].x << " " << Th[i][j].y << endl;
//	}
//}

func Ttilde = pow(x,2) + x*y + 1;
fespace Vh(Th, P1);
//Vh fe = f;
//plot(fe, fill=1, wait=1);
Vh T, P;
real lambax = 1;
real lambday = 1;
real Q = 1;
real q = 2;
real Tinf = 1;
real h = 2;

problem Laplas(T, P) = 
					int2d(Th) ( lambax*dx(T)*dx(P) + lambday*dy(T)*dx(P) )
					+ int2d(Th) ( Q*P )
					+ int1d(Th, 2) ( h*T*P )
					- int1d(Th, 2) ((h*Tinf -q)*P)
					+ on(1, T=Ttilde);

Laplas;
plot(T, value=true, fill=true, wait=true);